AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tndx

  The Twitter ndx

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60

# More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

Resources:
  tndxRunnerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../bin/lambda-runner
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Role: !GetAtt FunctionRole.Arn

  tndxSQSFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../bin/lambda-sqs
      Handler: bootstrap
      Runtime: provided.al2
      Architectures: [arm64]
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource: "arn:aws:s3:::is-tndx"
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: "arn:aws:s3:::is-tndx/*"
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - "arn:aws:dynamodb:us-east-1:150319663043:table/tndx"
            - Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ReceiveMessage
              Resource:
                - !GetAtt tndxRunnerQueue.Arn
            - Effect: Allow
              Action:
                - "ssm:GetParameter*"
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/tndx*"
      Events:
        tndxSQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt tndxRunnerQueue.Arn
            Enabled: true

  tndxRunnerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: tndx-runners
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: runnername
          AttributeType: S
        - AttributeName: userid
          AttributeType: N
      KeySchema:
        - AttributeName: runnername
          KeyType: HASH
        - AttributeName: userid
          KeyType: RANGE

  tndxRunnerQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: tndx-runner
      KmsMasterKeyId: alias/aws/sqs
      VisibilityTimeout: 60

  tndxRunnerFavoriteEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Run a tndx runner for favorites
      ScheduleExpression: "rate(30 minutes)"
      State: DISABLED
      Targets:
        - Arn: !GetAtt tndxRunnerFunction.Arn
          Id: tndxRunnerFunction
          Input: !Sub |
            {
              "runner_name": "tndx-rmrfslashbin-01",
              "loglevel": "info",
              "function": "favorites",
              "ddb_region": "/tndx/ddb/region",
              "ddb_runner_table": "/tndx/ddb/runner/table",
              "sqs_runner_url": "/tndx/sqs/runner/url",
              "s3_bucket": "/tndx/s3/bucket",
              "s3_region": "/tndx/s3/region",
              "ddb_table": "/tndx/ddb/table",
              "twitter_api_key": "/tndx/twitter/tndx/api/key",
              "twitter_api_secret": "/tndx/twitter/tndx/api/secret"
            }

  tndxRunnerFriendsEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Run a tndx runner for friends
      ScheduleExpression: "rate(30 minutes)"
      State: DISABLED
      Targets:
        - Arn: !GetAtt tndxRunnerFunction.Arn
          Id: tndxRunnerFunction
          Input: !Sub |
            {
              "runner_name": "tndx-rmrfslashbin-01",
              "loglevel": "info",
              "function": "friends",
              "ddb_region": "/tndx/ddb/region",
              "ddb_runner_table": "/tndx/ddb/runner/table",
              "sqs_runner_url": "/tndx/sqs/runner/url",
              "s3_bucket": "/tndx/s3/bucket",
              "s3_region": "/tndx/s3/region",
              "ddb_table": "/tndx/ddb/table",
              "twitter_api_key": "/tndx/twitter/tndx/api/key",
              "twitter_api_secret": "/tndx/twitter/tndx/api/secret"
            }

  tndxRunnerFollowersEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Run a tndx runner for friends
      ScheduleExpression: "rate(30 minutes)"
      State: DISABLED
      Targets:
        - Arn: !GetAtt tndxRunnerFunction.Arn
          Id: tndxRunnerFunction
          Input: !Sub |
            {
              "runner_name": "tndx-rmrfslashbin-01",
              "loglevel": "info",
              "function": "followers",
              "ddb_region": "/tndx/ddb/region",
              "ddb_runner_table": "/tndx/ddb/runner/table",
              "sqs_runner_url": "/tndx/sqs/runner/url",
              "s3_bucket": "/tndx/s3/bucket",
              "s3_region": "/tndx/s3/region",
              "ddb_table": "/tndx/ddb/table",
              "twitter_api_key": "/tndx/twitter/tndx/api/key",
              "twitter_api_secret": "/tndx/twitter/tndx/api/secret"
            }

  tndxRunnerTimelineEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Run a tndx runner for timeline
      ScheduleExpression: "rate(5 minutes)"
      State: DISABLED
      Targets:
        - Arn: !GetAtt tndxRunnerFunction.Arn
          Id: tndxRunnerFunction
          Input: !Sub |
            {
              "runner_name": "tndx-rmrfslashbin-01",
              "loglevel": "info",
              "function": "timeline",
              "ddb_region": "/tndx/ddb/region",
              "ddb_runner_table": "/tndx/ddb/runner/table",
              "sqs_runner_url": "/tndx/sqs/runner/url",
              "s3_bucket": "/tndx/s3/bucket",
              "s3_region": "/tndx/s3/region",
              "ddb_table": "/tndx/ddb/table",
              "twitter_api_key": "/tndx/twitter/tndx/api/key",
              "twitter_api_secret": "/tndx/twitter/tndx/api/secret"
            }

  tndxRunnerUserEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Run a tndx runner for timeline
      ScheduleExpression: "rate(12 hours)"
      State: DISABLED
      Targets:
        - Arn: !GetAtt tndxRunnerFunction.Arn
          Id: tndxRunnerFunction
          Input: !Sub |
            {
              "runner_name": "tndx-rmrfslashbin-01",
              "loglevel": "info",
              "function": "user",
              "ddb_region": "/tndx/ddb/region",
              "ddb_runner_table": "/tndx/ddb/runner/table",
              "sqs_runner_url": "/tndx/sqs/runner/url",
              "s3_bucket": "/tndx/s3/bucket",
              "s3_region": "/tndx/s3/region",
              "ddb_table": "/tndx/ddb/table",
              "twitter_api_key": "/tndx/twitter/tndx/api/key",
              "twitter_api_secret": "/tndx/twitter/tndx/api/secret"
            }

  PermissionForEventsToInvokeTndxRunnerFriendsLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "tndxRunnerFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt tndxRunnerFriendsEvent.Arn

  PermissionForEventsToInvokeTndxRunnerFavoritesLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "tndxRunnerFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt tndxRunnerFavoriteEvent.Arn

  PermissionForEventsToInvokeTndxRunnerFollowersLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "tndxRunnerFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt tndxRunnerFollowersEvent.Arn

  PermissionForEventsToInvokeTndxRunnerTimelineLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "tndxRunnerFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt tndxRunnerTimelineEvent.Arn

  PermissionForEventsToInvokeTndxRunnerUserLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "tndxRunnerFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt tndxRunnerUserEvent.Arn

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "TndxParameterStoreAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:GetParameter*"
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/tndx*"
        - PolicyName: "TndxS3Access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: "arn:aws:s3:::is-tndx"
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: "arn:aws:s3:::is-tndx/*"
        - PolicyName: "TndxSQSAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                Resource:
                  - !GetAtt tndxRunnerQueue.Arn
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: "arn:aws:ssm:us-east-1:150319663043:parameter/tndx*"
        - PolicyName: "TndxDDBAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                Resource:
                  - "arn:aws:dynamodb:us-east-1:150319663043:table/tndx"
                  - !GetAtt tndxRunnerTable.Arn
